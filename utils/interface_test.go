package utils

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestInterfaceToKey(t *testing.T) {
	assert.Equal(t, "0x2a", InterfaceToKey(uint8(42)))
	assert.Equal(t, "0x539", InterfaceToKey(uint16(1337)))
	assert.Equal(t, "0x539", InterfaceToKey(uint32(1337)))
	assert.Equal(t, "0x539", InterfaceToKey(uint64(1337)))

	assert.Equal(t, "42", InterfaceToKey(int8(42)))
	assert.Equal(t, "1337", InterfaceToKey(int16(1337)))
	assert.Equal(t, "1337", InterfaceToKey(int32(1337)))
	assert.Equal(t, "1337", InterfaceToKey(int64(1337)))

	assert.Equal(t, "\"foo\"", InterfaceToKey(string("foo")))
	assert.Equal(t, "[]byte{0x66, 0x6f, 0x6f}",
		InterfaceToKey([]byte{'f', 'o', 'o'}))
}

func TestInterfaceToHash(t *testing.T) {
	{
		sum := [32]uint8{0xfd, 0x67, 0xaf, 0x7d, 0xbe, 0xb3, 0x7f, 0xf6, 0x77, 0x49,
			0xe0, 0xa8, 0xee, 0x65, 0x61, 0xd9, 0xcd, 0xaf, 0x53, 0xe4, 0x4a, 0x5, 0xe3,
			0xf2, 0x2b, 0x53, 0xd4, 0x8e, 0x1d, 0x8b, 0xce, 0x33}
		assert.Equal(t, sum, InterfaceToHash256(uint8(42)))
		assert.Equal(t, sum, InterfaceToHash256(uint16(42)))
		assert.Equal(t, sum, InterfaceToHash256(uint32(42)))
		assert.Equal(t, sum, InterfaceToHash256(uint64(42)))
	}
	{
		sum := [32]uint8{0x73, 0x47, 0x5c, 0xb4, 0xa, 0x56, 0x8e, 0x8d, 0xa8, 0xa0,
			0x45, 0xce, 0xd1, 0x10, 0x13, 0x7e, 0x15, 0x9f, 0x89, 0xa, 0xc4, 0xda, 0x88,
			0x3b, 0x6b, 0x17, 0xdc, 0x65, 0x1b, 0x3a, 0x80, 0x49}
		assert.Equal(t, sum, InterfaceToHash256(int8(42)))
		assert.Equal(t, sum, InterfaceToHash256(int16(42)))
		assert.Equal(t, sum, InterfaceToHash256(int32(42)))
		assert.Equal(t, sum, InterfaceToHash256(int64(42)))
	}
	{
		sum := [32]uint8{0xb2, 0x21, 0x32, 0x95, 0xd5, 0x64, 0x91, 0x6f, 0x89, 0xa6,
			0xa4, 0x24, 0x55, 0x56, 0x7c, 0x87, 0xc3, 0xf4, 0x80, 0xfc, 0xd7, 0xa1,
			0xc1, 0x5e, 0x22, 0xf, 0x17, 0xd7, 0x16, 0x9a, 0x79, 0xb}
		assert.Equal(t, sum, InterfaceToHash256(string("foo")))
	}
	{
		sum := [32]uint8{0xdd, 0x84, 0x4d, 0x5b, 0xd9, 0x3d, 0xbd, 0xe2, 0xb7, 0x3,
			0xca, 0x5f, 0x59, 0x4c, 0x5e, 0x50, 0x22, 0x73, 0x8c, 0x7, 0xa7, 0x38,
			0x27, 0x32, 0xef, 0x1, 0x41, 0xb9, 0x72, 0x9d, 0xfe, 0x38}
		assert.Equal(t, sum, InterfaceToHash256([]byte{'f', 'o', 'o'}))
	}
}
